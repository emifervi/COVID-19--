program Arrays;

var
	int i, a[5], b[4];

func void merge(int low, int mid, int high);
var int l1, l2, i;
{
    print("Gets to merge \n");
    l1 = low;
    l2 = mid;
    i = low;

    while (l1 <= mid && 12 <= high) {
        if(a[l1] <= a[12]) {
            b[i] = a[l1];
            l1 = l1 + 1;
        }
        else {
            b[i] = a[l2];
            l2 = l2 + 1;
        }
        i = i + 1;
    }

    while(l1 <= mid) {
        b[i] = a[l1];
        i = i + 1;
        l1 = l1 + 1;
    }

    while(l2 <= high) {
        b[i] = a[l2];
        i = i + 1;
        l2 = l2 + 1;
    }

    for i = low to (high + 1) {
        a[i] = b[i];
    }
    print("Finishes Merging \n");
}

func void sort(int low, int high);
var int mid;
{   
    print("starts sroting \n");
    if( low < high) {
        mid = (low + high) / 2;
        sort(low, mid);
        sort(mid + 1, high);
        merge(low, mid, high);
    }
    print("Finishes sroting \n");
}

/*
func int foo(int n);
var int i[10];
{
    i[1] = 0;
    a[i[1]] = 3;
    print("val a[0]: ", a[0], "\n");
    
    i[3] = n;
    return(i[2 + 1] * 5);
}*/

/*
func int fib_din(int n);
var int f[10], i;
{
    f[0] = 0;
    f[1] = 1;

    for i = 2 to (n + 1) {
        f[i] = f[i - 1] + f[i -2];
    }

    return (f[n]);
}*/

main();
var
    int iter, i, j, rows, cols, limit, low;
    string n[2][2];
{   
    // Test merge sort
    limit = 4;
    for i = 0 to limit + 1 {
        input(a[i]);
    }
    print("List before sorting \n");
    for i = 0 to limit + 1 {
        print(a[i], "\t");
    }
    print("\n");

    sort(0, limit);
    print("List after sorting \n");
    for i = 0 to limit + 1 {
        print(a[i], "\t");
    }
    print("\n");
    
    
    
    /* 
    // Test String Matrix
    
    input(rows);
    input(cols);
    print("rows: ", rows, "\n");
    print("cols: ", cols, "\n");

    for i = 0 to rows {
        for j = 0 to cols {
            print("Input n at row: ", i, " and cols: ", j, "\n");
            input(n[i][j]);
        }
    }

    print("Matrix vals \n");
    for i = 0 to rows {
        for j = 0 to cols {
            print(n[i][j]);
        }
        print("\n");
    }
    */

    /*
    // Test arreglos anidados
    a[0] = 21;
    print(a[0], "\n");
    
    input(a[3]);
    input(a[a[3]]);
    print(a[1]);
    print(foo(a[1 + 2] - a[3 - 2]), "\n");
    */

    /*
    // Fibonacci Dinamico
    iter = 10;
    for i = 0 to iter {
        print("Dynamic fib on ", i + 1, "th iteration: ", fib_din(i), "\n");
    }
    */
}
